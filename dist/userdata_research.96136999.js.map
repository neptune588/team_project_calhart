{"version":3,"sources":["js/userdata.js","js/userdata_research.js"],"names":["userData","userIDInfo","userPWInfo","userName","userBirth","userEmail","exports","_userdata","require","IDTab","document","getElementById","PWTab","tabs","querySelectorAll","menu01","menu02","searchBtn","popUpParent","IDResultPopUp","PWResultPopUp","notSearchPopUp","popUpList","closeBtn","userNameShow","userIDShow","userPWShow","NameBar","EmailBar","IDBar","BirthBar","allInput","addEventListener","allChks","i","length","tabChks","eventTargetIndex","Array","from","indexOf","classRemove","valueClear","classAdd","classChks01","classList","contains","classChks02","chk01","chk02","dataSearch01","dataChecks","dataSearch02","returnDataName","property","returnDataEmail","returnDataIndex01","dataIndexChecks","returnDataIndex02","DataIndex01","DataIndex02","textInner","value","input","some","event","findIndex","element","className","add","remove","text","textContent","concat","forEach"],"mappings":"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","file":"userdata_research.96136999.js","sourceRoot":"..","sourcesContent":["const userData = [\r\n    {\r\n        userIDInfo : 'dbstjghks',\r\n        userPWInfo : '154876',\r\n        userName : '윤서환',\r\n        userBirth : '19951019',\r\n        userEmail : 'ctr_nike@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'dbstjghks777',\r\n        userPWInfo : '15484846',\r\n        userName : '윤시환',\r\n        userBirth : '19951018',\r\n        userEmail : 'dbstjghks777@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'javascript',\r\n        userPWInfo : 'difficult',\r\n        userName : '자바스크립',\r\n        userBirth : '19601017',\r\n        userEmail : 'javascript@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'kimnadan',\r\n        userPWInfo : 'd58484',\r\n        userName : '김나단',\r\n        userBirth : '19960214',\r\n        userEmail : 'jgagagagcript@naver.com'\r\n    }\r\n]\r\n\r\nexport {userData}","import {\r\n    userData\r\n} from './userdata.js';\r\n\r\n//탭\r\nconst IDTab = document.getElementById('id_search_tab');\r\nconst PWTab = document.getElementById('pw_search_tab');\r\n\r\n//탭 순환 용도\r\nconst tabs = document.querySelectorAll('.tab');\r\n\r\n//아이디 찾기 메뉴/ 비번 찾기 메뉴\r\nconst menu01 = document.getElementById('menu01');\r\nconst menu02 = document.getElementById('menu02');\r\n\r\n//찾기 버튼\r\nconst searchBtn = document.getElementById('search_btn');\r\n\r\n//팝업\r\nconst popUpParent = document.getElementById('pop_up_ex');\r\nconst IDResultPopUp = document.getElementById('pop_up_01');\r\nconst PWResultPopUp = document.getElementById('pop_up_02');\r\n//조건x시 띄우는 팝업\r\nconst notSearchPopUp = document.getElementById('pop_up_03');\r\n\r\n//팝업 순환 용도\r\nconst popUpList = document.querySelectorAll('.pop_up');\r\n\r\n//확인 버튼\r\nconst closeBtn = document.querySelectorAll('.confirm_btn_design');\r\n\r\n//이름 표시\r\nconst userNameShow = document.getElementById('user_name_show');\r\nconst userIDShow = document.getElementById('user_id_show');\r\nconst userPWShow = document.getElementById('user_pw_show');\r\n\r\n//필수 입력 창\r\nconst NameBar = document.getElementById('name_bar');\r\nconst EmailBar = document.getElementById('email_bar');\r\nconst IDBar = document.getElementById('id_bar');\r\nconst BirthBar = document.getElementById('birth_bar');\r\n\r\n//인풋 입력 창 --> 초기화 용도\r\nconst allInput = document.querySelectorAll('.bar_style');\r\n\r\n//찾기 버튼 클릭 이벤트 \r\nsearchBtn.addEventListener('click', allChks);\r\nfor (let i = 0; i < tabs.length; i++) {\r\n    tabs[i].addEventListener('click', tabChks);\r\n}\r\nfor (let i = 0; i < closeBtn.length; i++) {\r\n    closeBtn[i].addEventListener('click', function () {\r\n        let eventTarget = this;\r\n        //클로즈(확인)버튼의 .length와 pop의 .length및 순서 같으므로 인덱스 일치화 가능\r\n        let eventTargetIndex = Array.from(closeBtn).indexOf(eventTarget);\r\n        //console.log(eventTarget);\r\n        classRemove(popUpParent, 'pop_up_on');\r\n        classRemove(popUpList[eventTargetIndex], 'pop_up_on');\r\n        //확인 입력시 입력창 내용 초기화\r\n        valueClear();\r\n    });\r\n}\r\n\r\nfunction tabChks() {\r\n    if (this === IDTab) {\r\n        classAdd(IDTab, 'tab_on');\r\n        classAdd(menu01, 'menu_on');\r\n        classRemove(PWTab, 'tab_on');\r\n        classRemove(menu02, 'menu_on');\r\n    }\r\n    if (this === PWTab) {\r\n        classAdd(PWTab, 'tab_on');\r\n        classAdd(menu02, 'menu_on');\r\n        classRemove(IDTab, 'tab_on');\r\n        classRemove(menu01, 'menu_on');\r\n    }\r\n}\r\n\r\nfunction allChks() {\r\n    let classChks01 = IDTab.classList.contains('tab_on');\r\n    let classChks02 = menu01.classList.contains('menu_on');\r\n    if (classChks01 && classChks02) {\r\n        chk01();\r\n    } else {\r\n        chk02();\r\n    }\r\n}\r\n\r\n//아이디 찾기\r\nfunction chk01() {\r\n    //객체 속성은 속성 그 자체로 전달이 안되기 때문에 문자열의 형태로 전달\r\n    //해당 value가 모듈에 포함되어있는지 some으로 검사 -> 검사한값 객체형태로 반환\r\n    let dataSearch01 = dataChecks('userName', NameBar);\r\n    let dataSearch02 = dataChecks('userEmail', EmailBar);\r\n\r\n    /*     let returnData01 = {\r\n            property : dataCheck01, \r\n        }  의 형태로 된다는 것 */\r\n\r\n    let returnDataName = dataSearch01.property;\r\n    let returnDataEmail = dataSearch02.property;\r\n\r\n    //해당 value가 모듈에 있는 속성과 일치하면 그 값이 존재하는 인덱스값 반환\r\n    //해당하는 속성의 값과 value가 맞지 않으면 -1 반환\r\n    //(배열안 객체를 인덱스 순서대로 순회하면서 값을 발견하기만 하면 해당하는 인덱스의 숫자 반환, 숫자 반환이 -1 이라는 말은 결국 값이 없다는 말과도 같아진다.)\r\n    //즉 -1 라는뜻은 some으로 찾은 결과가 없다는 말과도 같기 떄문에\r\n    //따라서 -1 === -1이 되어도 some 중 하나 혹은 둘이 false가 되어서 조건식 통과X\r\n    let returnDataIndex01 = dataIndexChecks('userName', NameBar);\r\n    let returnDataIndex02 = dataIndexChecks('userEmail', EmailBar);\r\n\r\n    let DataIndex01 = returnDataIndex01.property; //인덱스 넘버\r\n    let DataIndex02 = returnDataIndex02.property; //인덱스 넘버\r\n\r\n    if (returnDataName && returnDataEmail && DataIndex01 === DataIndex02) {\r\n        classAdd(popUpParent, 'pop_up_on');\r\n        classAdd(IDResultPopUp, 'pop_up_on');\r\n        textInner(userNameShow, NameBar.value);\r\n        textInner(userIDShow, userData[DataIndex01].userIDInfo);\r\n        //userIdshow에 배열 userData[dataindex01] 즉 입력한 이름과 같은 인덱스 객체안에\r\n        //있는 유저 아이디를 가져와라. \r\n        //console.log(userData[DataIndex01].userIDInfo);\r\n    } else {\r\n        //console.log('조건x');\r\n        classAdd(popUpParent, 'pop_up_on');\r\n        classAdd(notSearchPopUp, 'pop_up_on');\r\n    }\r\n}\r\n\r\n//비밀번호 찾기\r\nfunction chk02() {\r\n    //''문자열의 형태로 비교하려는 속성을 넣어  ['']를 통해 비교한다.\r\n    //속성명에 '' \"\" 가 들어가면 []안에 해당 문자열을 넣어준다.\r\n    let dataSearch01 = dataChecks('userIDInfo', IDBar);\r\n    let dataSearch02 = dataChecks('userBirth', BirthBar);\r\n\r\n    let returnDataName = dataSearch01.property;\r\n    let returnDataEmail = dataSearch02.property;\r\n\r\n    let returnDataIndex01 = dataIndexChecks('userIDInfo', IDBar);\r\n    let returnDataIndex02 = dataIndexChecks('userBirth', BirthBar);\r\n\r\n    let DataIndex01 = returnDataIndex01.property; //인덱스 넘버\r\n    let DataIndex02 = returnDataIndex02.property; //인덱스 넘버\r\n\r\n    if (returnDataName && returnDataEmail && DataIndex01 === DataIndex02) {\r\n        classAdd(popUpParent, 'pop_up_on');\r\n        classAdd(PWResultPopUp, 'pop_up_on');\r\n        textInner(userPWShow, userData[DataIndex01].userPWInfo);\r\n    } else {\r\n        classAdd(popUpParent, 'pop_up_on');\r\n        classAdd(notSearchPopUp, 'pop_up_on');\r\n    }\r\n}\r\n\r\n//밸류와 모듈 데이터 속성값 비교, boolean값 반환 (true / false)\r\nfunction dataChecks(property, input) {\r\n    //문자열의 형태로 되어있는 속성은 [] 대괄호안에 넣어서 표기 ex: ['food'] \r\n    let dataCheck01 = userData.some((event) => {\r\n        return event[property] === input.value;\r\n    }); //맞으면 true반환\r\n    return {\r\n        property: dataCheck01, //true or false 반환 (some 조건 안맞으면 false)\r\n    }\r\n}\r\n\r\n//밸류와 모듈 데이터 속성값을 비교, 값이 있으면 그 값이 있는 인덱스 넘버 반환\r\n//없을시 -1 , === some false \r\nfunction dataIndexChecks(property, input) {\r\n    let dataIndexCheck01 = userData.findIndex((event) => {\r\n        return event[property] === input.value;\r\n    });\r\n\r\n    return {\r\n        property: dataIndexCheck01,\r\n        //밸류값이 모듈에 존재하면 그 값이 존재하는 모듈의 인덱스 반환\r\n        //반환x시 -1 즉 값이 없다는말 \r\n    }\r\n}\r\n\r\n//클래스 생성 함수 \r\nfunction classAdd(element, className) {\r\n    element.classList.add(className);\r\n}\r\n\r\n//클래스 제거 함수\r\nfunction classRemove(element, className) {\r\n    element.classList.remove(className);\r\n}\r\n\r\n//텍스트 생성 함수\r\nfunction textInner(element, text) {\r\n    element.textContent = `${text}`; //변수값을 문자열로 표현하기 위해 \r\n}\r\n\r\n//밸류 초기화\r\nfunction valueClear() {\r\n    allInput.forEach((event) => {\r\n        event.value = '';\r\n    })\r\n}"]}