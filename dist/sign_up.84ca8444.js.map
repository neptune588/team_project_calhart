{"version":3,"sources":["js/regex.js","js/userdata.js","js/sign_up.js"],"names":["totalRegex","totalRegexArr","id","regex","nameRegexArr","emailRegexArr","exports","userData","userIDInfo","userPWInfo","userName","userBirth","userEmail","_regex","require","_userdata","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","from","test","len","arr2","cautionState","regexTestName","regexTest00","regexTest01","regexTest02","regexTestEmailBefore","regexTestEmailAfter","termsAllChkBtn","document","getElementById","termsChk01Btn","termsChk02Btn","terms","querySelectorAll","cautionChk","termsAllChk","checked","forEach","checkBtn","termsClick","checkedBool","arrChange","every","term","addEventListener","idConfirm","necessaryInput","popUpToggleBtn","querySelector","userId","userPw","userPwReChk","userEmailAfter","userEmailSelected","userPwShowBtn","userIdChkBtn","valueChecks","thisIndex","indexOf","guideMessageArea","parentNode","lastElementChild","undefined","falseOn","textContent","etcCheck","userIdCheck","duplicateCheck","some","object","trueOn","removeClass","input","pwToggleState","userPwShow","setAttribute","addClass","emailSelected","selectedValue","options","selectedIndex","removeAttribute","nowInput","nowIndex","valueCheck01","valueCheck02","valueCheck03","valueCheck04","valueCheck05","valueCheck06","valueCheck07","valueCheck08","valueCheck09","myInput","parseInt","falseTrueReset","classList","contains","el","mentEl","style","color","removeClassMulti","CapsLock","getModifierState","IdNTitleMent","titleMent","stepCircle","stepText","prevPageBtn","nextPageBtn","showPage","loginPageInBtn","showNextPage","showPrevPage","pageCount","IdValueLoad","newP","createElement","insertBefore","location","href","pageOn","parentElement","pageCheck01","pageCheck02","toggleCation","lastInputChk","console","log","display","focus","className","add","addClassMulit","classArr","remove","setAttributeMulti","attrArr","_step","_iterator","_step$value","attrBefore","attrAfter"],"mappings":"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","file":"sign_up.84ca8444.js","sourceRoot":"..","sourcesContent":["const totalRegex = {\r\n    totalRegexArr: [\r\n        {\r\n            id : 'regexOnlyNumber04length',\r\n            regex : /^(19\\d\\d|20\\d\\d|2100)$/ //숫자1900~2100까지 4자리숫자만\r\n        },\r\n        {\r\n            id : 'regexOnlyNumber02length',\r\n            regex : /^(0?[1-9]|[1-2][0-9]|3[0-1])$/ //01~09까지는 한자릿수도 가능 이후부턴 두자리만 가능\r\n        },\r\n        {\r\n            id : 'regexEngNSymbolsNNumber',\r\n            regex :/^(?!.*[_].*[_])[a-z0-9_]{6,15}$/ //영어 소문자 ok 숫자 ok 특수문자_ 만가능, _ _ 두개올수없음 \r\n        }\r\n    ],\r\n\r\n    nameRegexArr: [\r\n        {\r\n            id : 'regexKor',\r\n            regex :/^[가-힣]{2,8}$/\r\n        },\r\n        {\r\n            id : 'regexSymbols',\r\n            regex :/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\r\n        }\r\n    ],\r\n    \r\n    emailRegexArr: [\r\n        {\r\n            id : 'regexEmail_before',\r\n            regex :/^(?!.*[_].*[_])[a-z0-9_]{2,12}$/\r\n            // \r\n        },\r\n        {\r\n            id : 'regexEmail_after',\r\n            regex :/^(?!.*\\.\\.)[a-z][a-z\\d.]{0,10}[a-z\\d]$/\r\n            // .이 맨앞에올수없음, .. 연속두번 사용불가능, .최대 두번까지사용가능, 영어소문자만 가능, 특수문자불가능\r\n        }\r\n    ]\r\n}\r\n\r\nexport {totalRegex};\r\n","const userData = [\r\n    {\r\n        userIDInfo : 'dbstjghks',\r\n        userPWInfo : '154876',\r\n        userName : '윤서환',\r\n        userBirth : '19951019',\r\n        userEmail : 'ctr_nike@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'dbstjghks777',\r\n        userPWInfo : '15484846',\r\n        userName : '윤시환',\r\n        userBirth : '19951018',\r\n        userEmail : 'dbstjghks777@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'javascript',\r\n        userPWInfo : 'difficult',\r\n        userName : '자바스크립',\r\n        userBirth : '19601017',\r\n        userEmail : 'javascript@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'kimnadan',\r\n        userPWInfo : 'd58484',\r\n        userName : '김나단',\r\n        userBirth : '19960214',\r\n        userEmail : 'jgagagagcript@naver.com'\r\n    }\r\n]\r\n\r\nexport {userData}","import { totalRegex } from './regex.js'\r\nimport { userData } from './userdata.js'\r\n\r\n/********************************* 페이지1 ***********************************/\r\n\r\nconst regexTestName = totalRegex.nameRegexArr[0].regex;\r\nconst regexTest00 = totalRegex.totalRegexArr[0].regex;\r\nconst regexTest01 = totalRegex.totalRegexArr[1].regex;\r\nconst regexTest02 = totalRegex.totalRegexArr[2].regex;\r\nconst regexTestEmailBefore = totalRegex.emailRegexArr[0].regex;\r\nconst regexTestEmailAfter = totalRegex.emailRegexArr[1].regex;\r\n\r\n//전부 체크\r\nconst termsAllChkBtn = document.getElementById('terms_all_chk');\r\n//이용약관동의 체크\r\nconst termsChk01Btn = document.getElementById('terms_chk_01');\r\n//개인정보 수집 체크\r\nconst termsChk02Btn = document.getElementById('terms_chk_02');\r\n//전체 체크를 제외한 체크버튼\r\nconst terms = document.querySelectorAll('.terms_chk');\r\n//경고 문구\r\nconst cautionChk = document.getElementById('caution');\r\n\r\n\r\n//경고 문구 상태 변수\r\nlet cautionState;\r\n\r\n//실행 이벤트 \r\ntermsAllChkBtn.addEventListener('click', termsAllChk);\r\n\r\ntermsChk01Btn.addEventListener('click', termsClick);\r\ntermsChk02Btn.addEventListener('click', termsClick);\r\n\r\n//약관 체크 동작 함수 \r\nfunction termsAllChk() {\r\n    if (termsAllChkBtn.checked) { //순서 -> click -> termsAllChkBtn.check = true -> 이벤트핸들러(함수동작전달) \r\n        terms.forEach(checkBtn => checkBtn.checked = true);\r\n    } else {\r\n        terms.forEach(checkBtn => checkBtn.checked = false);\r\n    }\r\n}\r\n\r\nfunction termsClick() {\r\n    const arrChange = Array.from(terms);\r\n    let checkedBool;\r\n\r\n    terms.forEach(() => {\r\n        checkedBool = arrChange.every(term => term.checked);\r\n    })\r\n\r\n    if(checkedBool) {\r\n        termsAllChkBtn.checked = true;\r\n    } else {\r\n        termsAllChkBtn.checked = false;\r\n    }\r\n}\r\n\r\n\r\n/********************************* 페이지2 ***********************************/\r\n\r\n//필수 입력 요소들\r\nconst necessaryInput = document.querySelectorAll('.necessary_text');\r\n//페이지2 경고 문구 팝업\r\nconst popUpToggleBtn = document.querySelector('.caution_pop_up_ex');\r\n//이름 입력창\r\nconst userName = document.getElementById('user_name');\r\n//아이디 입력창\r\nconst userId = document.getElementById('user_id');\r\n//비밀번호 입력창\r\nconst userPw = document.getElementById('user_pw');\r\n//비밀번호 확인 입력창\r\nconst userPwReChk = document.getElementById('user_pw_chk');\r\n//이메일 입력창 중 도메인 넣는부분(뒷부분)\r\nconst userEmailAfter = document.getElementById('user_email_last');\r\n//이메일 입력창 중 도메인 넣는부분 선택창\r\nconst userEmailSelected = document.getElementById('user_email_last_select');\r\n//비밀번호 보이기 버튼\r\nconst userPwShowBtn = document.getElementById('pw_view_btn');\r\n//아이디 체크\r\nconst userIdChkBtn = document.getElementById('user_id_chk');\r\n\r\n//팝업 클릭시 \r\npopUpToggleBtn.addEventListener('click', function () {\r\n    removeClass(this, 'pop_up_on');\r\n})\r\n\r\n//input 전체 순환\r\nnecessaryInput.forEach((input) => {\r\n    input.addEventListener('keyup', valueChecks);\r\n    input.addEventListener('blur', valueChecks);\r\n});\r\n\r\n//1. 공백체크 -> 공백아니면 이후 조건들 체크\r\nfunction valueChecks() {\r\n    const thisIndex = Array.from(necessaryInput).indexOf(this);\r\n    const guideMessageArea = this.parentNode.lastElementChild;\r\n\r\n    if (this.value === '' || this.value === undefined || this.value === null) {\r\n        falseOn(this, guideMessageArea); //해당 인덱스 요소의 밸류가 공백이면 false 추가 함수로\r\n        guideMessageArea.textContent = '입력값을 입력 혹은 선택해주세요!';\r\n    } else {\r\n        etcCheck(this, thisIndex);\r\n    } \r\n}\r\n\r\n//아이디 confirm 상태 \r\nlet idConfirm;\r\n//중복확인체크 , 아이디의 경우 버튼을 통해 체크\r\nuserIdChkBtn.addEventListener('click', userIdCheck);\r\nfunction userIdCheck() {\r\n    const guideMessageArea = userId.parentNode.lastElementChild;\r\n    const duplicateCheck = userData.some(object => object.userIDInfo === userId.value);\r\n\r\n    if (userId.value === '' || userId.value === undefined || userId.value === null) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '입력값을 입력 혹은 선택해주세요!';\r\n    } else if (!(regexTest02.test(userId.value))) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 6~15자)'\r\n    } else if (duplicateCheck) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '중복된 아이디입니다!'\r\n    } else {\r\n        trueOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!';\r\n        //userId전달\r\n        idConfirm = true;\r\n    }\r\n}\r\n\r\n//pw상태체크\r\nlet pwToggleState = false;\r\n//pw보이기 체크\r\nuserPwShowBtn.addEventListener('click', userPwShow);\r\n//패스워드 보이기/끄기 \r\nfunction userPwShow() {\r\n    if (!pwToggleState) {\r\n        userPw.setAttribute('type', 'text');\r\n        userPwReChk.setAttribute('type', 'text');\r\n\r\n        //아이콘 on\r\n        addClass(userPwShowBtn, 'pw_on');\r\n        pwToggleState = true;\r\n    } else {\r\n        userPw.setAttribute('type', 'password');\r\n        userPwReChk.setAttribute('type', 'password');\r\n\r\n        //아이콘 off\r\n        removeClass(userPwShowBtn, 'pw_on');\r\n        pwToggleState = false;\r\n    }\r\n}\r\n\r\n\r\n//pw가 가려졌을때 캡스락이 눌러졌는지 체크\r\nuserPw.addEventListener('keyup', function(e) {\r\n    let CapsLock = e.getModifierState('CapsLock');\r\n    let guideMessageArea = this.parentNode.lastElementChild;\r\n    if (!pwToggleState && CapsLock && userPw.value.length > 0) {\r\n        guideMessageArea.textContent = 'Caps Lock을 꺼주세요!'\r\n    }\r\n});\r\n\r\n//이메일 도메인부분 선택해서 넣었을떄 \r\nuserEmailSelected.addEventListener('change', emailSelected);\r\n//이메일 뒷자리(도메인영역) 셀렉트로 선택했을때(선택영역)\r\nfunction emailSelected () {\r\n    let selectedValue = userEmailSelected.options[userEmailSelected.selectedIndex];\r\n    const guideMessageArea = this.parentNode.lastElementChild;\r\n\r\n    if (selectedValue.value === '' || selectedValue.value === undefined || selectedValue.value === null) {\r\n        userEmailAfter.removeAttribute('disabled');\r\n        //직접입력을 선택했을때는 이메인 도메인 입력창 활성화 \r\n    } else {\r\n        userEmailAfter.value = selectedValue.textContent;\r\n        userEmailAfter.setAttribute('disabled', 'true');\r\n        trueOn(userEmailAfter, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n        //그외 선택을 했을때는 이메일 도메인 입력창에 선택한 옵션의 텍스트값이 전달/입력창 비활성화\r\n    }\r\n}\r\n\r\n//공백이 아닐때 각각의 인덱스 번호에 해당하는 조건식함수들 호출\r\nfunction etcCheck(nowInput, nowIndex) {\r\n    switch (nowIndex) {\r\n        case 0: {\r\n            valueCheck01(nowInput);\r\n            break;\r\n        }\r\n        case 2: {\r\n            valueCheck02(nowInput);\r\n            break;\r\n        }\r\n        case 1:\r\n        case 3: {\r\n            valueCheck03(nowInput);\r\n            break;\r\n        }\r\n        case 4: {\r\n            valueCheck04(nowInput);\r\n            break;\r\n        }\r\n        case 5: {\r\n            valueCheck05(nowInput);\r\n            break;\r\n        }\r\n        case 6: {\r\n            valueCheck06(nowInput);\r\n            break;\r\n        }\r\n        case 7: {\r\n            valueCheck07(nowInput);\r\n            break;\r\n        }\r\n        case 8: {\r\n            valueCheck08(nowInput);\r\n            break;\r\n        }\r\n        case 9: {\r\n            valueCheck09(nowInput);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n//이름 체크\r\nfunction valueCheck01(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n\r\n    if (!(regexTestName.test(myInput.value))) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '이름은 한글만 가능합니다.(최대 8자) 또한 초성 입력은 안됩니다.'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//생년월일 중에 생년 체크\r\nfunction valueCheck02(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    //value값은 항상 문자열이기떄문에 숫자비교를할떄는 숫자로 형변환 후 비교 \r\n    if (!(regexTest00.test(parseInt(myInput.value)))) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '유효한 년도가 아닙니다 (1900~2100까지 가능)'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//성별, 생년월일중 월 체크\r\nfunction valueCheck03(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    if (!(myInput.value)) {\r\n        falseOn(myInput, guideMessageArea);\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//생년월일 중에 일 체크\r\nfunction valueCheck04(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    if (!(regexTest01.test(parseInt(myInput.value)))) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '유효한 입력이 아닙니다 (1일~31일까지 가능)'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//공백아닐때 false제거 (아이디칸만)\r\nfunction valueCheck05(myInput) {\r\n    falseTrueReset(myInput);\r\n}\r\n\r\n//비밀번호 체크 \r\nfunction valueCheck06(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    if (!(regexTest02.test(myInput.value))) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 6~15자)'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//비밀번호 재확인 \r\nfunction valueCheck07(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    //비밀번호칸에 유효한 값이 들어갔는지 체크\r\n    let pwBool = userPw.classList.contains('trueOn');\r\n    if (!pwBool && (userPw.value !== myInput.value)) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '비밀번호가 일치하지 않습니다.'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '비밀번호가 일치합니다!'\r\n    }\r\n}\r\n\r\n//이메일 골뱅이 앞부분 체크\r\nfunction valueCheck08(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    if (!regexTestEmailBefore.test(myInput.value)) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 2~12자)'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//이메일 뒷자리 부분 체크(직접입력하는 영역)\r\nfunction valueCheck09(myInput) {\r\n    let guideMessageArea = myInput.parentNode.lastElementChild;\r\n    if (!regexTestEmailAfter.test(myInput.value)) {\r\n        falseOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (영어 소문자와 숫자, .만 입력 가능, .은 두번까지만)'\r\n    } else {\r\n        trueOn(myInput, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//border_red //스타일주는 용도\r\nfunction falseOn(el, mentEl) {\r\n    mentEl.style.color = 'red';\r\n    removeClass(el, 'true_on');\r\n    addClass(el, 'false_on');\r\n}\r\n\r\n//border_green //스타일주는 용도\r\nfunction trueOn(el, mentEl) {\r\n    mentEl.style.color = 'green';\r\n    removeClass(el, 'false_on');\r\n    addClass(el, 'true_on');\r\n}\r\n\r\n//border_reset \r\nfunction falseTrueReset(el) {\r\n    const classArr = ['false,on', 'true_on'];\r\n    removeClassMulti(el, classArr);\r\n}\r\n\r\n/********************************* 페이지3 ***********************************/\r\nconst IdNTitleMent = document.getElementById('id_n_title_ment');\r\nconst titleMent = document.getElementById('title_ment');\r\n\r\n\r\n/********************************* 페이지 공통 ***********************************/\r\n\r\n//페이지에 따라 상단 효과\r\nconst stepCircle = document.querySelectorAll('.circle');\r\nconst stepText = document.querySelectorAll('.text');\r\n//페이지 버튼\r\nconst prevPageBtn = document.getElementById('prev_btn');\r\nconst nextPageBtn = document.getElementById('next_btn');\r\nconst showPage = document.querySelectorAll('.page');\r\nconst loginPageInBtn = document.getElementById('login_page_in_btn');\r\n//prev,next 클릭 이벤트\r\nnextPageBtn.addEventListener('click', showNextPage);\r\nprevPageBtn.addEventListener('click', showPrevPage);\r\n\r\n//page count \r\nlet pageCount = 0;\r\n\r\n//가입한 아이디 표기\r\nfunction IdValueLoad() {\r\n    if (idConfirm) {\r\n        let newP = document.createElement('p');\r\n        newP.textContent = userId.value;\r\n        IdNTitleMent.insertBefore(newP, titleMent);\r\n    }\r\n}\r\n\r\nfunction showPrevPage() {\r\n    if (pageCount === 0) {\r\n        location.href = './login.html';\r\n    } else if (pageCount === 1) {\r\n        pageCount--;\r\n\r\n        nextPageBtn.textContent = `Next`;\r\n        pageOn();\r\n    }\r\n    //초기화\r\n    necessaryInput.forEach(input => input.value = '');\r\n    necessaryInput.forEach((input) => { \r\n        input.parentElement.lastElementChild.textContent = '';\r\n        removeClass(input, 'true_on');\r\n        removeClass(input, 'false_on');\r\n    });\r\n}\r\n\r\nfunction showNextPage() {\r\n    \r\n    if (pageCount === 0) {\r\n        pageCheck01();\r\n    } else if (pageCount === 1) {\r\n        pageCheck02();  \r\n    } \r\n}\r\n\r\nfunction pageCheck01() {\r\n    if (!(termsAllChkBtn.checked)) { //약관동의 안됐을경우\r\n        cautionState = false;\r\n        toggleCation();\r\n    } else {\r\n        pageCount++;\r\n\r\n        //약관 동의 체크 \r\n        termsAllChkBtn.checked = false;\r\n        termsAllChk();\r\n\r\n        //경고 문구\r\n        cautionState = true;\r\n        toggleCation();\r\n\r\n        nextPageBtn.textContent = `Submit`;\r\n        pageOn();\r\n    }\r\n}\r\n\r\nfunction pageCheck02() {\r\n    let lastInputChk = Array.from(necessaryInput).every(input => input.value && input.classList.contains('true_on'));\r\n\r\n    console.log(lastInputChk);\r\n    \r\n    //모든 원소가 조건을 만족하면 true, 하나라도 만족하지 않으면 false를 반환한다.\r\n    //해당 배열안에 있는 값들이 조건을 \"모두\" 통과해야만 true를 반환해준다.\r\n    if (!lastInputChk) {\r\n        addClass(popUpToggleBtn, 'pop_up_on');\r\n    } else {\r\n        pageCount++;\r\n\r\n        prevPageBtn.style.display = 'none';\r\n        nextPageBtn.style.display = 'none';\r\n\r\n        addClass(loginPageInBtn, 'login_page_in_btn_on');\r\n        IdValueLoad();\r\n\r\n        pageOn();\r\n    }\r\n}\r\n\r\n//경고 문구 토글 함수\r\nfunction toggleCation() {\r\n    if (!cautionState) {\r\n        addClass(cautionChk, 'block_on');\r\n    } else {\r\n        removeClass(cautionChk, 'block_on');\r\n    }\r\n}\r\n\r\nfunction pageOn() {\r\n    for (let i = 0; i < showPage.length; i++) {\r\n        removeClass(showPage[i], 'page_on');\r\n        removeClass(stepCircle[i], 'step_on');\r\n        removeClass(stepText[i], 'text_step_on');\r\n    }\r\n\r\n    addClass(showPage[pageCount], 'page_on');\r\n    addClass(stepCircle[pageCount], 'step_on');\r\n    addClass(stepText[pageCount], 'text_step_on');\r\n\r\n    if (pageCount === 1) {\r\n        userName.focus();\r\n    }\r\n}\r\n\r\nfunction addClass(el, className) {\r\n    el.classList.add(className);\r\n}\r\n\r\nfunction addClassMulit(el, classArr) {\r\n    classArr.forEach(className => el.classList.add(className));\r\n}\r\n\r\nfunction removeClass(el, className) {\r\n    el.classList.remove(className);\r\n}\r\n\r\nfunction removeClassMulti(el, classArr) {\r\n    classArr.forEach(className => el.classList.remove(className));\r\n}\r\n\r\nfunction setAttributeMulti(el, attrArr) {\r\n    for(let [attrBefore, attrAfter] of attrArr) {\r\n        el.setAttribute(attrBefore, attrAfter);\r\n    }\r\n}"]}