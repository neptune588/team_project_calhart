{"version":3,"sources":["js/regex.js","js/userdata.js","js/sign_up.js"],"names":["regextTotalArray","id","regex","exports","regexNameArray","regexEmailArray","userData","userIDInfo","userPWInfo","userName","userBirth","userEmail","cautionState","_regex","require","_userdata","regexTestName","regexTest00","regexTest01","regexTest02","regexTestEmailBefore","regexTestEmailAfter","termsArea","document","getElementById","termsAllChkBtn","termsChk01Btn","termsChk02Btn","termsClass","querySelectorAll","cautionChk","termsAllChk","checked","i","length","termsClick","termsClassValue","Array","from","every","value","console","log","toggleCation","style","display","addEventListener","pwToggleState","idConfirm","necessaryInput","guideMessage","popUpToggleBtn","querySelector","userId","userPw","userPwReChk","userEmailAfter","userEmailSelected","userPwShowBtn","userIdChkBtn","classList","remove","valueChecks","userIdCheck","guideMessageArea","parentNode","lastElementChild","IDMoutainChk","some","array","test","falseOn","textContent","trueOn","userPwShow","setAttribute","pwShowOnOff","add","emailSelected","selectedValue","options","selectedIndex","innerText","removeAttribute","eventTargetIndex","indexOf","indexSearch","index","valueCheck01","valueCheck02","valueCheck03","valueCheck04","valueCheck05","valueCheck06","valueCheck07","valueCheck08","valueCheck09","thisInputIndex","parseInt","falseTrueReset","pwInputClassChk","contains","userPwValue","object","objectsiblingLast","color","event","CapsLock","getModifierState","IdNTitleMent","titleMent","IdValueLoad","newP","createElement","insertBefore","stepCircle","stepText","prevPageBtn","nextPageBtn","showPage","loginPageInBtn","showNextPage","showPrevPage","pageCount","pageCheck01","pageCheck02","location","href","pageOn","necessaryInputChk01","necessaryInputChk02","focus"],"mappings":"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","file":"sign_up.e850a8b4.js","sourceRoot":"..","sourcesContent":["//정규식 배열\r\nconst regextTotalArray = [\r\n    {\r\n        id : 'regexOnlyNumber04length',\r\n        regex : /^(19\\d\\d|20\\d\\d|2100)$/ //숫자1900~2100까지 4자리숫자만\r\n    },\r\n    {\r\n        id : 'regexOnlyNumber02length',\r\n        regex : /^(0?[1-9]|[1-2][0-9]|3[0-1])$/ //01~09까지는 한자릿수도 가능 이후부턴 두자리만 가능\r\n    },\r\n    {\r\n        id : 'regexEngNSymbolsNNumber',\r\n        regex :/^(?!.*[_].*[_])[a-z0-9_]{6,15}$/ //영어 소문자 ok 숫자 ok 특수문자_ 만가능, _ _ 두개올수없음 \r\n    }\r\n    \r\n]\r\n\r\nconst regexNameArray = [\r\n    {\r\n        id : 'regexKor',\r\n        regex :/^[가-힣]{2,8}$/\r\n    },\r\n    {\r\n        id : 'regexSymbols',\r\n        regex :/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\r\n    }\r\n]\r\n\r\nconst regexEmailArray = [\r\n    {\r\n        id : 'regexEmail_before',\r\n        regex :/^(?!.*[_].*[_])[a-z0-9_]{2,12}$/\r\n        // \r\n    },\r\n    {\r\n        id : 'regexEmail_after',\r\n        regex :/^(?!.*\\.\\.)[a-z][a-z\\d.]{0,10}[a-z\\d]$/\r\n        // .이 맨앞에올수없음, .. 연속두번 사용불가능, .최대 두번까지사용가능, 영어소문자만 가능, 특수문자불가능\r\n    }\r\n]\r\n\r\nexport {regextTotalArray, regexNameArray, regexEmailArray}\r\n","const userData = [\r\n    {\r\n        userIDInfo : 'dbstjghks',\r\n        userPWInfo : '154876',\r\n        userName : '윤서환',\r\n        userBirth : '19951019',\r\n        userEmail : 'ctr_nike@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'dbstjghks777',\r\n        userPWInfo : '15484846',\r\n        userName : '윤시환',\r\n        userBirth : '19951018',\r\n        userEmail : 'dbstjghks777@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'javascript',\r\n        userPWInfo : 'difficult',\r\n        userName : '자바스크립',\r\n        userBirth : '19601017',\r\n        userEmail : 'javascript@naver.com'\r\n    },\r\n    {\r\n        userIDInfo : 'kimnadan',\r\n        userPWInfo : 'd58484',\r\n        userName : '김나단',\r\n        userBirth : '19960214',\r\n        userEmail : 'jgagagagcript@naver.com'\r\n    }\r\n]\r\n\r\nexport {userData}","import {\r\n    regextTotalArray,\r\n    regexNameArray,\r\n    regexEmailArray\r\n} from './regex.js'\r\nimport {\r\n    userData\r\n} from './userdata.js'\r\n\r\n/********************************* 페이지1 ***********************************/\r\n\r\n//정규식 \r\nconst regexTestName = regexNameArray[0].regex;\r\nconst regexTest00 = regextTotalArray[0].regex;\r\nconst regexTest01 = regextTotalArray[1].regex;\r\nconst regexTest02 = regextTotalArray[2].regex;\r\nconst regexTestEmailBefore = regexEmailArray[0].regex;\r\nconst regexTestEmailAfter = regexEmailArray[1].regex;\r\n//체크의 기준이되는 정규식을 checkRegex 배열에 저장 후 반복문으로 체크 (적용x 후에 적용)\r\n//const checkRegex = [regexTest00,regexTest01,regexTest02];\r\n//약관 동의 전체 감싸는 form\r\nconst termsArea = document.getElementById('terms_area');\r\n//전부 체크\r\nconst termsAllChkBtn = document.getElementById('terms_all_chk');\r\n//이용약관동의 체크\r\nconst termsChk01Btn = document.getElementById('terms_chk_01');\r\n//개인정보 수집 체크\r\nconst termsChk02Btn = document.getElementById('terms_chk_02');\r\n//전체 체크를 제외한 체크버튼\r\nconst termsClass = document.querySelectorAll('.terms_chk');\r\n//경고 문구\r\nconst cautionChk = document.getElementById('caution');\r\n\r\n\r\n//경고 문구 상태 변수\r\nlet cautionState;\r\n\r\n//실행 이벤트 \r\ntermsAllChkBtn.addEventListener('click', termsAllChk);\r\ntermsChk01Btn.addEventListener('click', termsClick);\r\ntermsChk02Btn.addEventListener('click', termsClick);\r\n\r\n//약관 체크 동작 함수 \r\nfunction termsAllChk() {\r\n    if (termsAllChkBtn.checked) { //순서 -> click -> termsAllChkBtn.check = true -> 이벤트핸들러(함수동작전달) \r\n        for (let i = 0; i < termsClass.length; i++) {\r\n            termsClass[i].checked = true;\r\n        }\r\n    } else {\r\n        for (let i = 0; i < termsClass.length; i++) {\r\n            termsClass[i].checked = false;\r\n        }\r\n    }\r\n}\r\n\r\n//하나라도 체크해제시 전부체크 해제 / 두개 체크시 올 체크\r\nfunction termsClick() {\r\n    for (let i = 0; i < termsClass.length; i++) {\r\n        //2개다 true가 되면 전체 약관동의도 true되게함.\r\n        let termsClassValue = Array.from(termsClass).every((value) => {\r\n            return value.checked;\r\n        });\r\n        if (termsClassValue) {\r\n            termsAllChkBtn.checked = true;\r\n        }\r\n        //하나라도 false되면 전체 약관동의 false\r\n        if (!(termsClass[i].checked)) {\r\n            termsAllChkBtn.checked = false;\r\n        }\r\n        console.log(termsClassValue);\r\n    }\r\n}\r\n\r\n//경고 문구 토글 함수\r\nfunction toggleCation() {\r\n    if (!cautionState) {\r\n        cautionChk.style.display = 'block';\r\n    } else if (cautionState) {\r\n        cautionChk.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\n/********************************* 페이지2 ***********************************/\r\n\r\n//필수 입력 요소들\r\nconst necessaryInput = document.querySelectorAll('.necessary_text');\r\n//경고 혹은 안내메시지들\r\nconst guideMessage = document.querySelectorAll('.guide_message');\r\n//페이지2 경고 문구 팝업\r\nconst popUpToggleBtn = document.querySelector('.caution_pop_up_ex');\r\n//이름 입력창\r\nconst userName = document.getElementById('user_name');\r\n//아이디 입력창\r\nconst userId = document.getElementById('user_id');\r\n//비밀번호 입력창\r\nconst userPw = document.getElementById('user_pw');\r\n//비밀번호 확인 입력창\r\nconst userPwReChk = document.getElementById('user_pw_chk');\r\n//이메일 입력창 중 도메인 넣는부분(뒷부분)\r\nconst userEmailAfter = document.getElementById('user_email_last');\r\n//이메일 입력창 중 도메인 넣는부분 선택창\r\nconst userEmailSelected = document.getElementById('user_email_last_select');\r\n//비밀번호 보이기 버튼\r\nconst userPwShowBtn = document.getElementById('pw_view_btn');\r\n//아이디 체크\r\nconst userIdChkBtn = document.getElementById('user_id_chk');\r\n//pw상태체크\r\nlet pwToggleState;\r\n//아이디 confirm 상태 \r\nlet idConfirm;\r\n//팝업 클릭시 \r\npopUpToggleBtn.addEventListener('click', function () {\r\n    this.classList.remove('pop_up_on');\r\n})\r\n//input 전체 순환\r\nfor (let i = 0; i < necessaryInput.length; i++) {\r\n    necessaryInput[i].addEventListener('keyup', valueChecks);\r\n    necessaryInput[i].addEventListener('blur', valueChecks);\r\n}\r\n//중복확인체크 , 아이디의 경우 버튼을 통해 체크\r\nuserIdChkBtn.addEventListener('click', userIdCheck);\r\n//pw보이기 체크\r\nuserPwShowBtn.addEventListener('click', userPwShow);\r\n//pw가 가려졌을때 캡스락이 눌러졌는지 체크\r\nuserPw.addEventListener('keyup', (event) => {\r\n    let CapsLock = event.getModifierState('CapsLock');\r\n    let guideMessageArea = userPw.parentNode.lastElementChild;\r\n    if (!pwToggleState && CapsLock && userPw.value.length > 0) {\r\n        guideMessageArea.textContent = 'Caps Lock을 꺼주세요!'\r\n    }\r\n});\r\n//이메일 도메인부분 선택해서 넣었을떄 \r\nuserEmailSelected.addEventListener('change', emailSelected);\r\n\r\n//아이디 중복체크\r\nfunction userIdCheck() {\r\n    let guideMessageArea = userId.parentNode.lastElementChild;\r\n    let IDMoutainChk = userData.some((array) => {\r\n        return array.userIDInfo === userId.value;\r\n    });\r\n    console.log(IDMoutainChk) //true나오면 중복;\r\n    if (!(userId.value)) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '입력값을 입력 혹은 선택해주세요!';\r\n    } else if (!(regexTest02.test(userId.value))) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 6~15자)'\r\n    } else if (IDMoutainChk) {\r\n        falseOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '중복된 아이디입니다!'\r\n    } else {\r\n        trueOn(userId, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!';\r\n        //userId전달\r\n        idConfirm = true;\r\n    }\r\n}\r\n\r\n//패스워드 보이기/끄기 \r\nfunction userPwShow() {\r\n    if (!pwToggleState) {\r\n        userPw.setAttribute('type', 'text');\r\n        userPwReChk.setAttribute('type', 'text');\r\n    } else {\r\n        userPw.setAttribute('type', 'password');\r\n        userPwReChk.setAttribute('type', 'password');\r\n    }\r\n    pwShowOnOff();\r\n}\r\n\r\n//패스워드 보이기/끄기 아이콘 on/off\r\nfunction pwShowOnOff() {\r\n    if (!pwToggleState) {\r\n        userPwShowBtn.classList.add('pw_on');\r\n        pwToggleState = true;\r\n    } else {\r\n        userPwShowBtn.classList.remove('pw_on');\r\n        pwToggleState = false;\r\n    }\r\n}\r\n\r\n//이메일 뒷자리(도메인영역) 셀렉트로 선택했을때(선택영역)\r\nfunction emailSelected() {\r\n    let selectedValue = userEmailSelected.options[userEmailSelected.selectedIndex];\r\n    let guideMessageArea = this.parentNode.lastElementChild;\r\n    if (!selectedValue.value) {\r\n        userEmailAfter.removeAttribute('disabled');\r\n        //직접입력을 선택했을때는 이메인 도메인 입력창 활성화 \r\n    } else {\r\n        userEmailAfter.value = selectedValue.innerText;\r\n        userEmailAfter.setAttribute('disabled', 'true');\r\n        trueOn(userEmailAfter, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n        //그외 선택을 했을때는 이메일 도메인 입력창에 선택한 옵션의 텍스트값이 전달/입력창 비활성화\r\n    }\r\n}\r\n\r\n//1. 공백체크 -> 공백아니면 이후 조건들 체크\r\nfunction valueChecks() {\r\n    let eventTarget = this; //blur 이벤트 발동한 객체\r\n    //배열로 전환 후 indexof로 지금 해당하는 그것의 인덱스 번호 추출\r\n    let eventTargetIndex = Array.from(necessaryInput).indexOf(eventTarget);\r\n    //해당하는 요소 마지막 요소인 가이드문구 요소\r\n    let guideMessageArea = this.parentNode.lastElementChild;\r\n    if (!(this.value)) {\r\n        falseOn(eventTarget, guideMessageArea); //해당 인덱스 요소의 밸류가 공백이면 false 추가 함수로\r\n        guideMessageArea.textContent = '입력값을 입력 혹은 선택해주세요!';\r\n    } else {\r\n        indexSearch(eventTargetIndex);\r\n    } //공백이 아니면 다른 조건 체크하기 위해 indexSearch실행\r\n}\r\n\r\n//공백이 아닐때 각각의 인덱스 번호에 해당하는 조건식함수들 호출\r\nfunction indexSearch(index) {\r\n    switch (index) {\r\n        case 0: {\r\n            valueCheck01(index);\r\n            break;\r\n        }\r\n        case 2: {\r\n            valueCheck02(index);\r\n            break;\r\n        }\r\n        case 1:\r\n        case 3: {\r\n            valueCheck03(index);\r\n            break;\r\n        }\r\n        case 4: {\r\n            valueCheck04(index);\r\n            break;\r\n        }\r\n        case 5: {\r\n            valueCheck05(index);\r\n            break;\r\n        }\r\n        case 6: {\r\n            valueCheck06(index);\r\n            break;\r\n        }\r\n        case 7: {\r\n            valueCheck07(index);\r\n            break;\r\n        }\r\n        case 8: {\r\n            valueCheck08(index);\r\n            break;\r\n        }\r\n        case 9: {\r\n            valueCheck09(index);\r\n            break;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//이름 체크\r\nfunction valueCheck01(index) {\r\n    //문자열과 정규식은 자료형(타입)이 다르기 떄문에 바로 비교를 하면 안되고\r\n    //test메서드를 통해 밸류를 체크\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!(regexTestName.test(thisInputIndex.value))) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '이름은 한글만 가능합니다.(최대 8자) 또한 초성 입력은 안됩니다.'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//생년월일 중에 생년 체크\r\nfunction valueCheck02(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    //value값은 항상 문자열이기떄문에 숫자비교를할떄는 숫자로 형변환 후 비교 \r\n    if (!(regexTest00.test(parseInt(thisInputIndex.value)))) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '유효한 년도가 아닙니다 (1900~2100까지 가능)'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//성별/ 생년월일중 월 체크\r\nfunction valueCheck03(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!(thisInputIndex.value)) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//생년월일 중에 일 체크\r\nfunction valueCheck04(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!(regexTest01.test(parseInt(thisInputIndex.value)))) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '유효한 입력이 아닙니다 (1일~31일까지 가능)'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//공백아닐때 false제거 (아이디칸만)\r\nfunction valueCheck05(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    falseTrueReset(thisInputIndex);\r\n}\r\n\r\n//비밀번호 체크 \r\nfunction valueCheck06(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!(regexTest02.test(thisInputIndex.value))) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 6~15자)'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//비밀번호 재확인 \r\nfunction valueCheck07(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    //비밀번호칸에 유효한 값이 들어갔는지 체크\r\n    let pwInputClassChk = userPw.classList.contains('trueOn');\r\n    let userPwValue = userPw.value\r\n    //console.log(userPwValue);\r\n    if (!pwInputClassChk && (userPwValue !== thisInputIndex.value)) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '비밀번호가 일치하지 않습니다.'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '비밀번호가 일치합니다!'\r\n    }\r\n}\r\n\r\n//이메일 골뱅이 앞부분 체크\r\nfunction valueCheck08(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!regexTestEmailBefore.test(thisInputIndex.value)) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (특수문자 _는 한번만 가능, 영어 소문자 또는 숫자 특수문자_ 조합 가능, 2~12자)'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//이메일 뒷자리 부분 체크(직접입력하는 영역)\r\nfunction valueCheck09(index) {\r\n    let thisInputIndex = necessaryInput[index];\r\n    let guideMessageArea = thisInputIndex.parentNode.lastElementChild;\r\n    if (!regexTestEmailAfter.test(thisInputIndex.value)) {\r\n        falseOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '유효하지 않은 입력입니다. (영어 소문자와 숫자, .만 입력 가능, .은 두번까지만)'\r\n    } else {\r\n        trueOn(thisInputIndex, guideMessageArea);\r\n        guideMessageArea.textContent = '알맞은 양식입니다!'\r\n    }\r\n}\r\n\r\n//border_red //스타일주는 용도\r\nfunction falseOn(object, objectsiblingLast) {\r\n    objectsiblingLast.style.color = 'red';\r\n    object.classList.remove('true_on');\r\n    object.classList.add('false_on');\r\n}\r\n\r\n//border_green //스타일주는 용도\r\nfunction trueOn(object, objectsiblingLast) {\r\n    objectsiblingLast.style.color = 'green';\r\n    object.classList.remove('false_on');\r\n    object.classList.add('true_on');\r\n}\r\n\r\n//border_reset \r\nfunction falseTrueReset(object) {\r\n    object.classList.remove('false_on');\r\n    object.classList.remove('true_on');\r\n}\r\n\r\n/********************************* 페이지3 ***********************************/\r\nconst IdNTitleMent = document.getElementById('id_n_title_ment');\r\nconst titleMent = document.getElementById('title_ment');\r\n\r\n//가입한 아이디 표기\r\nfunction IdValueLoad() {\r\n    if (idConfirm) {\r\n        let newP = document.createElement('p');\r\n        newP.textContent = userId.value;\r\n        IdNTitleMent.insertBefore(newP, titleMent);\r\n    }\r\n}\r\n\r\n/********************************* 페이지 공통 ***********************************/\r\n\r\n//페이지에 따라 상단 효과\r\nconst stepCircle = document.querySelectorAll('.circle');\r\nconst stepText = document.querySelectorAll('.text');\r\n//페이지 버튼\r\nconst prevPageBtn = document.getElementById('prev_btn');\r\nconst nextPageBtn = document.getElementById('next_btn');\r\nconst showPage = document.querySelectorAll('.page');\r\nconst loginPageInBtn = document.getElementById('login_page_in_btn');\r\n//prev,next 클릭 이벤트\r\nnextPageBtn.addEventListener('click', showNextPage);\r\nprevPageBtn.addEventListener('click', showPrevPage);\r\n\r\n//page count \r\nlet pageCount = 0;\r\n\r\n//동작함수\r\nfunction showNextPage() {\r\n    if (pageCount === 0) {\r\n        pageCheck01();\r\n\r\n    } else if (pageCount === 1) {\r\n        pageCheck02();\r\n    }\r\n    if (pageCount === 2) {\r\n        prevPageBtn.style.display = 'none';\r\n        nextPageBtn.style.display = 'none';\r\n        loginPageInBtn.classList.add('login_page_in_btn_on');\r\n        IdValueLoad();\r\n\r\n        //초기화\r\n        for (let i = 0; i < necessaryInput.length; i++) {\r\n            necessaryInput[i].value = '';\r\n        }\r\n    }\r\n}\r\n\r\nfunction showPrevPage() {\r\n    if (pageCount === 0) {\r\n        location.href = '../login_page/login.html';\r\n    }\r\n    if (pageCount === 1) {\r\n        pageCount--;\r\n\r\n        pageOn();\r\n\r\n        //초기화\r\n        for (let i = 0; i < necessaryInput.length; i++) {\r\n            necessaryInput[i].value = '';\r\n        }\r\n    }\r\n}\r\n\r\nfunction pageCheck01() {\r\n    if (!(termsAllChkBtn.checked)) { //약관동의 안됐을경우\r\n        cautionState = false;\r\n        toggleCation();\r\n    } else {\r\n        pageCount++;\r\n\r\n        //약관 동의 체크 \r\n        termsAllChkBtn.checked = false;\r\n        termsAllChk();\r\n\r\n        //경고 문구\r\n        cautionState = true;\r\n        toggleCation();\r\n\r\n        pageOn();\r\n    }\r\n}\r\n\r\nfunction pageCheck02() {\r\n    let necessaryInputChk01 = Array.from(necessaryInput).every((event) => {\r\n        return event.value;\r\n    });\r\n    let necessaryInputChk02 = Array.from(necessaryInput).every((event) => {\r\n        return event.classList.contains('true_on');\r\n    });\r\n    //모든 원소가 조건을 만족하면 true, 하나라도 만족하지 않으면 false를 반환한다.\r\n    //해당 배열안에 있는 값들이 조건을 \"모두\" 통과해야만 true를 반환해준다.\r\n    if (!(necessaryInputChk01 && necessaryInputChk02) ) {\r\n        //necessaryInputChk, necessaryInputChk02 가 false라는 뜻은 해당 조건 하나도 만족 못했다는 말. \r\n        //pop_up 관련\r\n        popUpToggleBtn.classList.add('pop_up_on');\r\n    } else {\r\n        pageCount++;\r\n\r\n        pageOn();\r\n    }\r\n}\r\n\r\nfunction pageOn() {\r\n    for (let i = 0; i < showPage.length; i++) {\r\n        showPage[i].classList.remove('page_on');\r\n        stepCircle[i].classList.remove('step_on');\r\n        stepText[i].classList.remove('text_step_on');\r\n    }\r\n\r\n    showPage[pageCount].classList.add('page_on');\r\n    stepCircle[pageCount].classList.add('step_on');\r\n    stepText[pageCount].classList.add('text_step_on');\r\n\r\n    if (pageCount === 1) {\r\n        //페이지 1됐을때 포커스 할당 \r\n        userName.focus();\r\n    }\r\n    //console.log(pageCount);\r\n}\r\n\r\n/* function allValueTrue () {\r\n    for(let i = 0; i < necessaryInput.length; i++) {\r\n        necessaryInput[i].classList.contains('trueOn');\r\n    }\r\n} */"]}